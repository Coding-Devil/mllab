def naive_bayes_predict(data, target_name, test_instance):
    target_values = data[target_name].unique()
    print(target_values)
    predicted_target_values = {}
    for target in target_values:
        target_proba = (data[target_name] == target).mean()
        print(target_proba)
        attrib_proba = 1
        for attrib, value in test_instance.items():
            attrib_value_conditional_proba = (data[attrib] == value)[data[target_name] == target].mean()
            attrib_proba *= attrib_value_conditional_proba
        predicted_target_values[target] = target_proba * attrib_proba
    return predicted_target_values

# Creates a test instance
test_instance = {"outlook": "Sunny", "temp": "Cool", "humidity": "High", "wind": "Strong"}

# Performs prediction
prediction = naive_bayes_predict(data.copy(), data.columns[data.shape[1] - 1], test_instance)
print("Prediction is:", prediction)